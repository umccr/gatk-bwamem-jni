buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'java'
    id 'com.vanniktech.maven.publish' version '0.31.0-rc1'
    id 'signing'
    id 'com.palantir.git-version' version '3.1.0' //version helper
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.testng:testng:6.9.6'
}

signing {
    sign publishing.publications
}

final version = versionDetails().lastTag
String cpath = "src/main/c"
String libname = "libbwa"

task buildBwaLib(type: Exec){
    workingDir "$cpath"
    outputs.files "$cpath/libbwa*"
    outputs.dir "$cpath/bwa"
    commandLine "make"
    String home = System.properties."java.home"
    //strip the trailing jre
    String corrected = home.endsWith("jre") ?  home.substring(0, home.length() - 4) : home
    environment JAVA_HOME : corrected
    doFirst {  println "using $home -> $corrected as JAVA_HOME" }
}

clean {
    delete "$cpath/$libname*"
    delete fileTree("$cpath") {include "$libname*", "*.o"}
}

build.dependsOn buildBwaLib

processResources {
    dependsOn buildBwaLib
    from cpath
    include "$libname*"
}

test {
    dependsOn buildBwaLib
    useTestNG()
    testLogging {
        testLogging {
            events "skipped", "failed"
            exceptionFormat = "full"
        }
        afterSuite { desc, result ->
            if (!desc.parent) { // will match the outermost suite
                println "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
            }
        }
    }
}

import com.vanniktech.maven.publish.SonatypeHost
import com.vanniktech.maven.publish.JavaLibrary
import com.vanniktech.maven.publish.JavadocJar

mavenPublishing {
  // the first parameter configures the -javadoc artifact, possible values:
  // - `JavadocJar.None()` don't publish this artifact
  // - `JavadocJar.Empty()` publish an emprt jar
  // - `JavadocJar.Javadoc()` to publish standard javadocs
  // the second whether to publish a sources jar
  configure(new JavaLibrary(new JavadocJar.Javadoc(), true))

  // Publish to Maven Central
  publishToMavenCentral(SonatypeHost.CENTRAL_PORTAL)
  signAllPublications()
  coordinates("org.umccr.java", "gatk-bwamem-jni", version)

  pom {
    name = "gatk-bwamem-jni"
    description = "java bindings for the bwa-mem assembler"
    inceptionYear = "2025"
    url = "https://github.com/umccr/gatk-bwamem-jni/"
    licenses {
      license {
        name = "BSD 3-Clause"
        url = "https://github.com/umccr/gatk-bwamem-jni/blob/master/LICENSE.TXT"
        distribution = "repo"
      }
    }
    developers {
      developer {
        id = "umccr"
        name = "UMCCR"
        url = "https://github.com/umccr/"
      }
    }
    scm {
      url = "https://github.com/umccr/gatk-bwamem-jni/"
      connection = "scm:git:git://github.com/umccr/gatk-bwamem-jni.git"
      developerConnection = "scm:git:ssh://git@github.com/umccr/gatk-bwamem-jni.git"
    }
  }
}
